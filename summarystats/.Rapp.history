library("ape")
50000/26
5000/26
?install.packages
library
?library
setwd('~/Dropbox/solploidy/summarystats')#
library("ape")#
library("phytools")#
library("treeplyr")#
#
## Solanaceae time-tree with corrected names Sarkinen et al 2013#
solanaceae.tree<-read.tree("~/Dropbox/solploidy/basicdata/solcorrecttip.tre")#
#
# Dataset created by RZF from CCDB and independent records by EEG#
#idnumber, source,fullname, genus, species,cultivarhybrid,csomenumber,lifehistoryclean, ploidy selfincomp, ploidybyZF, namechangedfrom#
solanaceae.allrecords<-read.csv("~/Dropbox/solploidy/basicdata/solanaceaerecords.csv",header=TRUE,sep=",", stringsAsFactors=FALSE, na.strings="")#
#
#How many species, how many genera#
species<-unique(solanaceae.allrecords$fullname)#
total.species<-length(species)# 2268 total species#
genera<-unique(solanaceae.allrecords$genus)#
total.genera<-length(genera)#97 genera#
#
#Calculating the mode(s)#
Mode <- function(x) {#
  ux <- unique(x)#
  ux[which.max(tabulate(match(x, ux)))]#
}#
#
#Creating a very simple database with summary stats#
mode.csome<-rep(0,total.species)#
min.csome<-rep(0,total.species)#
mode.ploidy<-rep(0,total.species)#
min.ploidy<-rep(0,total.species)#
self.incomp<-rep(0,total.species)#
life.hist<-rep(0,total.species)#
#
for (i in 1:total.species){#
  index<-which(solanaceae.allrecords$fullname==species[i])#
  aux1<- solanaceae.allrecords$csomenumber[index]#
  if(all(is.na(aux1))){#
  	 mode.csome[i]<-NA#
  	 min.csome[i]<-NA  	#
  }else{#
  mode.csome[i]<-min(Mode(aux1))#
  min.csome[i]<-min(aux1,na.rm=TRUE)#
  }#
  aux2<- solanaceae.allrecords$ploidy[index]#
  if(all(is.na(aux2))){#
  	 mode.ploidy[i]<-NA#
  	 min.ploidy[i]<-NA  	#
  }else{#
  mode.ploidy[i]<-min(Mode(aux2))#
  min.ploidy[i]<-min(aux2,na.rm=TRUE)#
  }	#
  self.incomp[i]<-solanaceae.allrecords$selfincomp[index[1]]#
  life.hist[i]<-solanaceae.allrecords$lifehistoryclean[index[1]]#
}#
#
#Simplified contains summary stats for each spces#
simplified.solanaceae<-data.frame(species, min.csome, mode.csome,min.ploidy,mode.ploidy,self.incomp, life.hist)
head(simplified.solanaceae)
#Matching for everything#
matched<-make.treedata(solanaceae.tree,simplified.solanaceae, name_column="species"). #846
#Matching for everything#
matched<-make.treedata(solanaceae.tree,simplified.solanaceae, name_column="species") #846
matched
no.ploidy=which(is.na(matched$dat[,3])==TRUE) #283
no.si<-which(is.na(matched$dat[,6])==TRUE)#351
ploidyandsi<-c(setdiff(no.ploidy, no.si),intersect(no.ploidy,no.si))
setdiff(no.ploidy, no.si)
intersect(no.ploidy,no.si)
ploidyandsi<-c(setdiff(no.ploidy, no.si),intersect(no.ploidy,no.si))
length(ploidyandsi)
?union
union(no.ploidy, no.si)
noploidyandsi<-union(no.ploidy, no.si)
length(noploidyandsi)
ploidysi.dataset<-matched$dat[-c(noploidyandsi)]
ploidysi.dataset<-matched$dat[-c(noploidyandsi),]
head(ploidysi.dataset)
dim(ploidysi.dataset)
head(simplified.solanaceae)
no.ploidy=which(is.na(simplified.solanaceae$mode.ploidy[,3])==TRUE) #283
no.ploidy=which(is.na(simplified.solanaceae$mode.ploidy)==TRUE) #283
length(no.ploidy)
no.csome=which(is.na(simplified.solanaceae$mode.csome==TRUE) #253
no.csome=which(is.na(simplified.solanaceae$mode.csome)==TRUE) #253
length(no.csome)
no.si<-which(is.na(simplified.solanaceae$self.incomp)==TRUE)#351
length(no.si)
noploidyandsi<-union(no.ploidy, no.si)#413 without ploidy or selfincompatibility
noploidyandsi
length(2951)
length(noploidyandsi)
ploidysi.solanaceae<-simplified.solanaceae[-c(noploidyandsi),]
head(ploidysi.solanaceae)
matched<-make.treedata(solanaceae.tree,ploidysi.solanaceae, name_column="species") #846
matched
dim(simplified.solanaceae)
2268-1960
dim(ploidysi.solanaceae)
plotTree(matched$phy,type="fan",fsize=0.1,lwd=1)
row.names(ploidysi.dataset)<-matched$phy$tip.label
ploidysi.dataset<-matched$dat
row.names(ploidysi.dataset)<-matched$phy$tip.label
ploidysi.dataset
ploidysi.dataset<-data.frame(matched$dat)
row.names(ploidysi.dataset)<-matched$phy$tip.label
ploidysi.tree<-matched$phy
plotTree(ploidysi.tree,type="fan",fsize=0.5,lwd=1)
plotTree(ploidysi.tree,type="fan",fsize=0.4,lwd=1)
head(ploidysi.dataset)
?barplot
hist(ploidysi.dataset$mode.ploidy)
dim(simplified.solanaceae)
plotTree(ploidysi.tree,type="fan",fsize=0.4,lwd=1)
hist(ploidysi.dataset$mode.ploidy)
a<-hist(ploidysi.dataset$mode.ploidy)
a
hist(ploiysi.dataset$self.incomp)
hist(ploidysi.dataset$self.incomp)
baplot(ploidysi.dataset$self.incomp)
barplot(ploidysi.dataset$self.incomp)
length(which(ploidysi.dataset$self.incomp==SI))
length(which(ploidysi.dataset$self.incomp=="SI"))
?write.table
write.tree(ploidysi.tree,file="~/Dropbox/solploidy/basicdata/ploidysi.tre")
write.table(csomeseriesdat2,file="~/Dropbox/solploidy/basicdata/ploidysi.txt",sep=',',row.names=TRUE, col.names=TRUE)
write.table(ploidysi.dataset,file="~/Dropbox/solploidy/basicdata/ploidysi.txt",sep=',',row.names=TRUE, col.names=TRUE)
ploidysi.solanaceae<-simplified.solanaceae[-c(no.ploidy),]
ploidy.solanaceae<-simplified.solanaceae[-c(no.ploidy),]
matched<-make.treedata(solanaceae.tree,ploidy.solanaceae, name_column="species") #220 out of 208 that match the tree
matched
ploidy.dataset<-data.frame(matched$dat)
row.names(ploidy.dataset)<-matched$phy$tip.label
ploidy.tree<-matched$phy
plotTree(ploidy.tree,type="fan",fsize=0.4,lwd=1)
plotTree(ploidy.tree,type="fan",fsize=0.2,lwd=1)
hist(ploidy.dataset$mode.ploidy)
a<-hist(ploidy.dataset$mode.ploidy)
a
a<-hist(ploidy.dataset$mode.ploidy)
ploidy.dataset$mode.ploidy
write.tree(ploidy.tree,file="~/Dropbox/solploidy/basicdata/ploidy.tre")
write.table(ploidysi.dataset,file="~/Dropbox/solploidy/basicdata/ploidy.txt",sep=',',row.names=TRUE, col.names=TRUE)
write.table(ploidysi.dataset$mode.ploidy,file="~/Dropbox/solploidy/basicdata/ploidy.txt",sep=',',row.names=TRUE, col.names=TRUE)
ploidy.dataset<-data.frame(matched$dat)
row.names(ploidy.dataset)<-matched$phy$tip.label
ploidy.tree<-matched$phy
write.tree(ploidy.tree,file="~/Dropbox/solploidy/basicdata/ploidy.tre")
write.table(ploidysi.dataset$mode.ploidy,file="~/Dropbox/solploidy/basicdata/ploidy.txt",sep=',',row.names=TRUE, col.names=TRUE)
write.table(ploidysi.dataset$mode.ploidy,file="~/Dropbox/solploidy/basicdata/ploidy.txt",sep=',',row.names=row.names(ploidy.dataset), col.names=TRUE)
write.table(ploidysi.dataset$mode.ploidy,file="~/Dropbox/solploidy/basicdata/ploidy.txt",sep=',',row.names=ploidy.tre$tip.labels, col.names=TRUE)
write.table(ploidysi.dataset$mode.ploidy,file="~/Dropbox/solploidy/basicdata/ploidy.txt",sep=',',row.names=ploidy.tree$tip.labels, col.names=TRUE)
tip.names<-ploidy.tree$tip.labels
write.table(ploidysi.dataset$mode.ploidy,file="~/Dropbox/solploidy/basicdata/ploidy.txt",sep=',',row.names=tip.names, col.names=TRUE)
write.table(ploidysi.dataset$mode.ploidy,file="~/Dropbox/solploidy/basicdata/ploidy.txt",sep=',',row.names=FALSE, col.names=TRUE)
write.table(ploidy.dataset$mode.ploidy,file="~/Dropbox/solploidy/basicdata/ploidy.txt",sep=',',row.names=tip.names, col.names=TRUE)
tip.names<-ploidy.tree$tip.labels
write.table(ploidy.dataset$mode.ploidy,file="~/Dropbox/solploidy/basicdata/ploidy.txt",sep=',',row.names=tip.names, col.names=TRUE)
write.table(ploidy.dataset$mode.ploidy,file="~/Dropbox/solploidy/basicdata/ploidy.txt",sep=',',row.names=FALSE, col.names=TRUE)
aux1<-which(ploidy.dataset$mode.ploidy==2)
aux<-which(ploidy.dataset$mode.ploidy!=2)
length(aux1)
length(aux)
binary.var<-rep(1,423)
binary.var[aux1]=0
binary.var
sum(binary.var)
63?423
63/423
binary.var<- t(binary.var)
binary.var
write.table(binary.var),file="~/Dropbox/solploidy/basicdata/binaryploidy.txt",sep=',',row.names=FALSE, col.names=TRUE)
write.table(binary.var,file="~/Dropbox/solploidy/basicdata/binaryploidy.txt",sep=',',row.names=FALSE, col.names=TRUE)
binary.var<-rep(1,423) #
binary.var[aux1]=0
write.table(binary.var,file="~/Dropbox/solploidy/basicdata/binaryploidy.txt",sep=',',row.names=FALSE, col.names=TRUE)
?abline
write.nexus(ploidy.tree, file="~/Dropbox/solploidy/basicdata/ploidy.nex")
binary.var<-data.frame(binary.var)
row.names(binary.var)<-tip.names
write.csv(binary.var,file="~/Dropbox/solploidy/basicdata/binaryploidy.csv",sep=',',row.names=TRUE, col.names=TRUE)
col.names=TRUE
write.csv(binary.var,file="~/Dropbox/solploidy/basicdata/binaryploidy.csv",row.names=TRUE, col.names=TRUE)
binary.var
names(binary.var)<-tip.names
binary.var
tip.names<-ploidy.tree$tip.labels
tip.names
tip.names<-ploidy.tree$tip.label
tip.names
row.names(binary.var)<-tip.names
binary.var
write.csv(binary.var,file="~/Dropbox/solploidy/basicdata/binaryploidy.csv",row.names=TRUE, col.names=TRUE)
write.table(binary.var,file="~/Dropbox/solploidy/basicdata/binaryploidy.tsv",sep=" ",row.names=TRUE, col.names=TRUE)
write.table(binary.var,file="~/Dropbox/solploidy/basicdata/binaryploidy.txt",sep=" ",row.names=TRUE, col.names=TRUE)
binary.var<-rep(1,423) #
binary.var[aux1]=0#
binary.var<-data.frame(binary.var)
binary.table<-cbind(tip.labels, binary.var)
binary.table<-cbind(tip.names, binary.var)
binary.table
write.table(binary.table,file="~/Dropbox/solploidy/basicdata/binaryploidy.tsv",sep="\t",row.names=FALSE, col.names=FALSE)
max(nodeHeights(ploidy.tree))
library("devtools")
install_github("revbayes/RevGagets")
install_github(""revbayes/RevGadgets"")
install_github("revbayes/RevGadgets")
install.packages("ggplot2")
library(RevGadgets)#
#
library(ggplot2)
p = plot_ancestral_states(" ~/revbayes-master/projects/cmake/output/BiSSE_polydip.trees")
?plot_ancestral_states
?RevGadgets
install.packges("ggtree")
install_github("revbayes/RevGadgets")
source("https://bioconductor.org/biocLite.R")#
biocLite("ggtree")
install_github("revbayes/RevGadgets")
library(RevGadgets)
p = plot_ancestral_states("~/revbayes-master/projects/cmake/output/BiSSE_polydip.trees")
install.packages("treeio")
biocLite("treeio")
library(RevGadgets)
install_github("revbayes/RevGadgets")
library(RevGadgets)
library(treeio)
